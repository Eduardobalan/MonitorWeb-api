spring.tymeleaf.cache = false

## -------------------------------------------------------------------------------
## GERAIS
## -------------------------------------------------------------------------------

## Profile default
spring.profiles.default=prod
        
## Portas
server.port=8080

# Duração da sessão definida em segundos
server.session.timeout=1800
server.tomcat.max-http-header-size=64000

## Formatador de datas do jackson
spring.jackson.serialization.write_dates_as_timestamps=false
spring.jackson.serialization.fail-on-empty-beans=false
spring.jackson.date-format=yyyy-MM-dd'T'HH:mm:ss.SSSZ


## -------------------------------------------------------------------------------
## LOGGING
## -------------------------------------------------------------------------------

logging.path=../
logging.level.root=INFO
logging.level.org.springframework.web=INFO
logging.level.org.hibernate=INFO
logging.level.org.camunda=INFO


## -------------------------------------------------------------------------------
## SEGURANÇA
## -------------------------------------------------------------------------------

## Tipo de segurança: aceita as seguintes opções: in-memory, database, ldap ou compras
app.security.connection.type=database


## -------------------------------------------------------------------------------
## BANCO DE DADOS
## -------------------------------------------------------------------------------

## Pool connection
spring.datasource.max-wait=60000
spring.datasource.max-active=30
spring.datasource.initial-size=5
spring.datasource.max-idle=10
spring.datasource.min-idle=5

## Evitar Broken pipe
spring.datasource.testOnBorrow=true
spring.datasource.validationQuery=SELECT 1


## -----------------------------------------------------------------------------------
## POSTGRES
## -----------------------------------------------------------------------------------

spring.datasource.url=jdbc:postgresql://localhost/webmonitor
spring.datasource.username=postgres
spring.datasource.password=postgres
##O que o Hibernate ira fazer quando a estrutura for diferente:
##update: altera a estrutura do banco
##create-drop: dropar e depois criar novamente (perdendo valores)
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
## Força o hibernate a usar determinado driver(segurança).
spring.datasource.driverClassName=org.postgresql.Driver